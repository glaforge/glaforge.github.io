<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on Guillaume Laforge</title><link>https://glaforge.github.io/tags/go/</link><description>Recent content in go on Guillaume Laforge</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright><lastBuildDate>Tue, 27 Sep 2022 16:02:00 +0100</lastBuildDate><atom:link href="https://glaforge.github.io/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>A Cloud Run service in Go calling a Workflows callback endpoint</title><link>https://glaforge.github.io/posts/a-cloud-run-service-in-go-calling-a-workflows-callback-endpoint/</link><pubDate>Tue, 27 Sep 2022 16:02:00 +0100</pubDate><guid>https://glaforge.github.io/posts/a-cloud-run-service-in-go-calling-a-workflows-callback-endpoint/</guid><description>It&amp;rsquo;s all Richard Seroter&amp;rsquo;s fault, I ended up dabbling with Golang! We were chatting about a use case using Google Cloud Workflows and a Cloud Run service implemented in Go. So it was the occasion to play a bit with Go. Well, I still don&amp;rsquo;t like error handling&amp;hellip; But let&amp;rsquo;s rewind the story a bit!
Workflows is a fully-managed service/API orchestrator on Google Cloud. You can create some advanced business workflows using YAML syntax.</description></item></channel></rss>