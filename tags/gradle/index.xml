<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gradle on Guillaume Laforge</title><link>https://glaforge.github.io/tags/gradle/</link><description>Recent content in gradle on Guillaume Laforge</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright><lastBuildDate>Mon, 24 Oct 2022 11:33:25 +0100</lastBuildDate><atom:link href="https://glaforge.github.io/tags/gradle/index.xml" rel="self" type="application/rss+xml"/><item><title>Build Deploy Java 17 Apps on Cloud Run With Cloud Native Buildpacks on Temurin</title><link>https://glaforge.github.io/posts/build-deploy-java-17-apps-on-cloud-run-with-cloud-native-buildpacks-on-temurin/</link><pubDate>Mon, 24 Oct 2022 11:33:25 +0100</pubDate><guid>https://glaforge.github.io/posts/build-deploy-java-17-apps-on-cloud-run-with-cloud-native-buildpacks-on-temurin/</guid><description>In this article, let&amp;rsquo;s revisit the topic of deploying Java apps on Cloud Run. In particular, I&amp;rsquo;ll deploy a Micronaut app, written with Java 17, and built with Gradle.
With a custom Dockerfile On Cloud Run, you deploy containerised applications, so you have to decide the way you want to build a container for your application. In a previous article, I showed an example of using your own Dockerfile, which would look as follows with an OpenJDK 17, and enabling preview features of the language:</description></item></channel></rss>